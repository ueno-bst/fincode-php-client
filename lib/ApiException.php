<?php

declare(strict_types=1);
/**
 * fincode API.
 *
 * fincodeのAPIリファレンスです。\\ fincodeは決済情報のほか様々なリソースを管理できるため、リソース指向なREST APIをベースとしたインターフェイス設計のもとでAPIを提供しています。\\ APIの呼び出しにはAPIキーによる認証が必要であり、リクエストの際に`Authorization`ヘッダーに有効なAPIキーをセットすることで認証できます。
 *
 * The version of the OpenAPI document: 1.2.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Fincode;

class ApiException extends \Exception
{
    /**
     * The deserialized response object.
     */
    protected mixed $responseObject = null;

    /**
     * Constructor.
     *
     * @param string                     $message         Error message
     * @param int                        $code            HTTP status code
     * @param array<string, string>|null $responseHeaders HTTP response header
     * @param object|string|null         $responseBody    HTTP decoded body of the server response either as \stdClass or string
     */
    public function __construct(string $message = '', int $code = 0, private readonly ?array $responseHeaders = [], private readonly object|string|null $responseBody = null)
    {
        parent::__construct($message, $code);
    }

    /**
     * Gets the HTTP response header.
     *
     * @return array<string, string>|null HTTP response header
     */
    public function getResponseHeaders(): ?array
    {
        return $this->responseHeaders;
    }

    /**
     * Gets the HTTP body of the server response either as Json or string.
     *
     * @return object|string|null HTTP body of the server response either as \stdClass or string
     */
    public function getResponseBody(): object|string|null
    {
        return $this->responseBody;
    }

    /**
     * Sets the deserialized response object (during deserialization).
     *
     * @param mixed $obj Deserialized response object
     */
    public function setResponseObject(mixed $obj): static
    {
        $this->responseObject = $obj;

        return $this;
    }

    /**
     * Gets the deserialized response object (during deserialization).
     *
     * @return mixed the deserialized response object
     */
    public function getResponseObject(): mixed
    {
        return $this->responseObject;
    }
}
