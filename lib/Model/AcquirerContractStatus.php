<?php

declare(strict_types=1);
/**
 * fincode API.
 *
 * fincodeのAPIリファレンスです。\\ fincodeは決済情報のほか様々なリソースを管理できるため、リソース指向なREST APIをベースとしたインターフェイス設計のもとでAPIを提供しています。\\ APIの呼び出しにはAPIキーによる認証が必要であり、リクエストの際に`Authorization`ヘッダーに有効なAPIキーをセットすることで認証できます。
 *
 * The version of the OpenAPI document: 1.2.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.9.0
 */
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Fincode\Model;

/**
 * 決済事業者 契約ステータス  - &#x60;701&#x60;: 申込なし&lt;br /&gt;&lt;span class&#x3D;\&quot;smallText\&quot;&gt;まだこの決済手段を利用申請していません&lt;/span&gt; - &#x60;702&#x60;: 審査受付&lt;br /&gt;&lt;span class&#x3D;\&quot;smallText\&quot;&gt;fincodeが審査を受け付けました。まだこの決済手段は利用できません。&lt;/span&gt; - &#x60;703&#x60;: 審査待ち&lt;br /&gt;&lt;span class&#x3D;\&quot;smallText\&quot;&gt;fincodeによる審査開始を待っています。まだこの決済手段は利用できません。&lt;/span&gt; - &#x60;704&#x60;: 審査中&lt;br /&gt;&lt;span class&#x3D;\&quot;smallText\&quot;&gt;fincodeによる審査中です。まだこの決済手段は利用できません。&lt;/span&gt; - &#x60;705&#x60;: 審査保留中&lt;br /&gt;&lt;span class&#x3D;\&quot;smallText\&quot;&gt;審査の過程で保留中が発生しました。まだこの決済手段は利用できません。&lt;/span&gt; - &#x60;706&#x60;: 審査OK&lt;br /&gt;&lt;span class&#x3D;\&quot;smallText\&quot;&gt;fincodeによる審査の結果OKとなりました。まだこの決済手段は利用できません。&lt;/span&gt; - &#x60;707&#x60;: 利用可能&lt;br /&gt;&lt;span class&#x3D;\&quot;smallText\&quot;&gt;この決済手段は利用可能です。&lt;/span&gt; - &#x60;708&#x60;: 審査NG&lt;br /&gt;&lt;span class&#x3D;\&quot;smallText\&quot;&gt;fincodeによる審査の結果NGとなりました。この決済手段は利用できません。&lt;/span&gt; - &#x60;709&#x60;: 申込中止&lt;br /&gt;&lt;span class&#x3D;\&quot;smallText\&quot;&gt;この決済手段の利用申請を中止しました。&lt;/span&gt;.
 */
enum AcquirerContractStatus: string
{
    /**
     * Possible values of this enum.
     */
    case _701 = '701';
    case _702 = '702';
    case _703 = '703';
    case _704 = '704';
    case _705 = '705';
    case _706 = '706';
    case _707 = '707';
    case _708 = '708';
    case _709 = '709';

    /**
     * Gets allowable values of the enum.
     *
     * @return string[]
     */
    public static function getAllowableEnumValues(): array
    {
        return array_map(fn (self $enum): string => $enum->value, self::cases());
    }
}
